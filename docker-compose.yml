version: '3'
services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    hostname: zookeeper
    container_name: zookeeper
    networks: 
      - broker-kafka
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:latest
    hostname: kafka
    container_name: kafka
    networks: 
      - broker-kafka
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: order-topic:3:1

  kafdrop:
    image: obsidiandynamics/kafdrop:latest
    hostname: kafdrop
    container_name: kafdrop
    networks: 
      - broker-kafka
    depends_on:
      - kafka
    ports:
      - 9000:9000
    environment:
      KAFKA_BROKERCONNECT: kafka:29092

  ms-rails:
    build:
      context: ./ms-rails/
      dockerfile: Dockerfile
    container_name: ms_rails_app
    depends_on:
      - kafka
    networks: 
      - broker-kafka
    ports:
      - 3000:3000

  ms-go:
    build:
      context: ./ms-go/
      dockerfile: Dockerfile
    container_name: ms_go_app
    depends_on:
      - kafka
      - mongo
    networks: 
      - broker-kafka
    ports:
      - 3030:3030

  mongo:
    image: mongo:latest
    container_name: mongodb
    networks: 
      - broker-kafka
    ports:
      - 27017:27017

networks: 
  broker-kafka:
    driver: bridge
